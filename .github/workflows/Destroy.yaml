name: Workflow to remove EKS Cluster and associated resources

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: dev
        type: choice
        options:
          - prod
          - dev

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Set Working Directory
        run: echo "WORKING_DIR=./environment/${{ inputs.environment }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials (Access Keys)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.TF_VAR_region }}
      
      - name: Set Terraform Variables
        run: |
          echo 'TF_VAR_env=${{ vars.TF_VAR_env }}' >> $GITHUB_ENV
          echo 'TF_VAR_key=${{ vars.TF_VAR_key }}' >> $GITHUB_ENV
          echo 'TF_VAR_backend_bucket=${{ vars.TF_VAR_backend_bucket }}' >> $GITHUB_ENV
          echo 'TF_VAR_cidr_block=${{ vars.TF_VAR_cidr_block }}' >> $GITHUB_ENV
          echo 'TF_VAR_private_subnets_cidr=${{ vars.TF_VAR_private_subnets_cidr }}' >> $GITHUB_ENV
          echo 'TF_VAR_public_subnets_cidr=${{ vars.TF_VAR_public_subnets_cidr }}' >> $GITHUB_ENV
          echo 'TF_VAR_availability_zones=${{ vars.TF_VAR_availability_zones }}' >> $GITHUB_ENV
          echo 'TF_VAR_cluster_name=${{ vars.TF_VAR_cluster_name }}' >> $GITHUB_ENV
          echo 'TF_VAR_cluster_version=${{ vars.TF_VAR_cluster_version }}' >> $GITHUB_ENV
          echo 'TF_VAR_max_size=${{ vars.TF_VAR_max_size }}' >> $GITHUB_ENV
          echo 'TF_VAR_min_size=${{ vars.TF_VAR_min_size }}' >> $GITHUB_ENV
          echo 'TF_VAR_desired_size=${{ vars.TF_VAR_desired_size }}' >> $GITHUB_ENV
          echo 'TF_VAR_instance_types=${{ vars.TF_VAR_instance_types }}' >> $GITHUB_ENV
          echo 'TF_VAR_region=${{ vars.TF_VAR_region }}' >> $GITHUB_ENV
          
      # Run Terraform commands using the dynamic directory set above
      - name: Terraform Init
        run: terraform init
        working-directory: ./environment/${{ inputs.environment }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./environment/${{ inputs.environment }}
      
